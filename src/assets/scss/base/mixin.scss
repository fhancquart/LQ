@mixin inputStyle{
    padding: .85em 1em;
    border-radius: 10px;
    margin: .5em 0;
    outline: inherit;
    width: inherit;
    font-size: 1.15em;
    color: darken($lightGrey, 10%);
    font-weight: bold;
    text-transform: uppercase;
    &::-webkit-input-placeholder{
        color: $lightGrey;
    }
}

@mixin switchMode($base, $bgColor, $gradient, $textColor, $borderButton, $content, $modal) {
    #{$base}{
        background-image: url('../../img/background.png'), linear-gradient(0.5turn, darken($bgColor, 7%), $gradient, darken($bgColor, 7%));

        p, label,textarea, .step, p {
            color: $textColor !important;
        }

        input, textarea, .buttonGroups .default, .ssButton, select{
            background-color: rgba($content, 0.469);
            border: 2px solid $content;
        }

        .modal{
            background-color: $modal;
            border: 2px solid $content;
        }

        input {
            &:not([name='inputFamily']){
                color: $textColor;
            }
        }

        .buttonGroups .default, .buttonGroups .T, .buttonGroups .Q, .buttonGroups .R{
            color: rgba($textColor, .5) !important;
        }

        .buttonGroups{
            .active{
                background-color: $green !important;
                color: #fff !important;
            }
        }

        input, textarea{
            &::placeholder {
                color: $textColor !important;
                opacity: .4;
            }
        }

        svg{
            fill: $textColor !important;
        }

        h2,
        h3 {
            color: $textColor;
            font-weight: normal;
        }

        .orange-button {
            border: 6px solid $borderButton;
            color: white;
            background: radial-gradient(at 50%  150%, rgba($bright, .8), $orange);
        
            filter: brightness(1);
            @include thinShadow;
            &:hover{
                filter: brightness(1.1);
                animation: colorSpin 1s linear infinite;
            }
            &:active{
                background-color: darken($orange, 10%);
                // background: radial-gradient(at 0%  150%, rgba(darken($bright, 10%), .8), darken($orange, 10%));
            }
            img{
                padding-right:.5em !important;
            }
        }  

        .conteneur{
            .content{
                background-color: rgba($content, 0.3);
                border: 3px solid rgba($content, 0.4);
                .header{
                    .logo, .logout, .back{
                        cursor: $cursor;
                    }
                    .profilMenu{
                        color: $grey;
                        ul{
                            li{
                                cursor: $cursor;
                                &:hover{
                                    color: $orange;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

@mixin moveTop {
    --duration: .44s;
    transform: translateY(var(--y, 0px));
    transition: transform var(--duration), box-shadow var(--duration);
    div {
        // 2te Buchstaben Reihe verstecken
        overflow: hidden;
        text-shadow: 0 var(--font-size) 0 var(--text);
        span {
            // Buchstaben moven
            transition: transform var(--duration) ease;
            transform: translateY(var(--m, 0px));
            $i: 1;
            @while $i < 12 {
                &:nth-child(#{$i}) {
                    // Delay
                    transition-delay: $i / 20 + s;
                }
                $i: $i + 1;
            }
        }
    }
    &:hover {
        // Neuer Button Y Wert
        --y: -3px;
        span {
            // Neuer Buchstaben Y Wert
            --m: calc(var(--font-size) * -1);
        }
    }
}

@mixin thinShadow {
    --shadow: 0 2px 0px -1px #{rgba(rgba(51, 51, 51, 0.048), .12)};
    box-shadow: var(--shadow);
    &:hover {
        --shadow: var(--shadow-hover);
        --shadow-hover: 0 10px 20px -2px #{rgba(rgba($bright, 0.048), 0.32)};
    }
}

@mixin fatShadow {
    --shadow: 0 10px 20px -2px #{rgba(rgba($orange, 0.048), 0.3)};
    box-shadow: var(--shadow);
}

@mixin funnyText{
    @for $i from 1 through 50 {
        span:nth-child(#{$i}) { 
            display: inline-block;
            transform: rotate(0deg);
            animation: funny .5s $funnyBezier calc(0.075 * #{$i}s) forwards;
        }
    }
}

$color: (
    main: #c9a04e,
    minor: #f7f6f2,
    bg: #1a202e,
);
$particles: 50;
$width: 500;
$height: 300;
$gravityY: 150;
$frequency: infinite;

$box-shadow: ();
$box-shadow2: ();
@for $i from 0 through $particles {
    $box-shadow: $box-shadow,
        random($width)-$width /
            2 +
            px
            random($height)-$height /
            .85 +
            px
            hsl(random(360), 100%, 50%);
    $box-shadow2: $box-shadow2, 0 0 #fff;
}
@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }

    @-moz-keyframes #{$animationName} {
        @content;
    }

    @-o-keyframes #{$animationName} {
        @content;
    }

    @-ms-keyframes #{$animationName} {
        @content;
    }

    @keyframes #{$animationName} {
        @content;
    }
}

@mixin animation-delay($settings) {
    -moz-animation-delay: $settings;
    -webkit-animation-delay: $settings;
    -o-animation-delay: $settings;
    -ms-animation-delay: $settings;
    animation-delay: $settings;
}

@mixin animation-duration($settings) {
    -moz-animation-duration: $settings;
    -webkit-animation-duration: $settings;
    -o-animation-duration: $settings;
    -ms-animation-duration: $settings;
    animation-duration: $settings;
}

@mixin animation($settings) {
    -moz-animation: $settings;
    -webkit-animation: $settings;
    -o-animation: $settings;
    -ms-animation: $settings;
    animation: $settings;
}

@mixin transform($settings) {
    transform: $settings;
    -moz-transform: $settings;
    -webkit-transform: $settings;
    -o-transform: $settings;
    -ms-transform: $settings;
}

.firework {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 10px;
}
.firework > .before,
.firework > .after {
    position: absolute;
    width: 5px;
    height: 5px;
    border-radius: 50%;
    box-shadow: $box-shadow2;
    @include animation-delay((0.5s, 0.5s, 0.5s));
    @include animation(
        (
            1s bang ease-out 1s $frequency backwards,
            1s gravity ease-in 1s $frequency backwards,
            5s position linear 5s $frequency backwards
        )
    );
}

.firework > .after {
    @include animation-delay((1s, 1s, 1s));
    @include animation-duration((1s, 1s, 6s));
}

@include keyframes(bang) {
    to {
        box-shadow: $box-shadow;
    }
}

@include keyframes(gravity) {
    to {
        @include transform(translateY($gravityY + px));
        opacity: 0;
    }
}

@include keyframes(position) {
    0%,
    19.9% {
        margin-top: 10%;
        margin-left: 40%;
    }
    20%,
    39.9% {
        margin-top: 40%;
        margin-left: 30%;
    }
    40%,
    59.9% {
        margin-top: 20%;
        margin-left: 70%;
    }
    60%,
    79.9% {
        margin-top: 30%;
        margin-left: 20%;
    }
    80%,
    99.9% {
        margin-top: 30%;
        margin-left: 80%;
    }
}
@keyframes moveYear {
    100% {
        transform: translateY(-137px);
    }
}